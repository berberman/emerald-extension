buildscript {
    ext {
        kotlin_version = '1.2.21'
        dokka_version = '0.9.15'
        minecraft_version = '1.12.2-R0.1-SNAPSHOT'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.novoda:bintray-release:0.8.0'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

//noinspection GroovyAssignabilityCheck
group 'cn.berberman'
//noinspection GroovyAssignabilityCheck
version '1.1-SNAPSHOT'

apply plugin: 'kotlin'
apply plugin: 'com.novoda.bintray-release'
apply plugin: 'org.jetbrains.dokka'

repositories {
    mavenCentral()
    maven { url = "https://hub.spigotmc.org/nexus/content/groups/public/" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.spigotmc:spigot-api:$minecraft_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.2'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}

task copyDoc(group: 'documentation', type: Copy) {
    from '/docs/emerald-extension'
    from '_config.yml'
    into '/docs'
}

task cleanOriginDoc(group: 'documentation', type: Delete) {
    delete '/docs/emerald-extension'
}

task cleanDoc(group: 'documentation', type: Delete) {
    delete '/docs'
}

clean {
    dependsOn(cleanDoc)
}

configurations {
    dokka.finalizedBy copyDoc
    copyDoc.finalizedBy cleanOriginDoc
}

publish {
    userOrg = 'berberman'
    bintrayUser = 'berberman'
    dryRun = true
    groupId = 'cn.berberman'
    artifactId = 'emerald-extension'
    publishVersion = version.toString()
    desc = 'a extension of Minecraft Spigot plugin, written by kotlin.'
    website = 'https://github.com/berberman/emerald-extension'
}

dokka {
    outputFormat = 'jekyll'
    outputDirectory = "$projectDir/docs"
}
kotlin {
    experimental {
        coroutines "enable"
    }
}
